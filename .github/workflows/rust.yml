name: CI

on:
  push:
    branches: [ "main" ]
    tags: [ "v*", "release-*" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    name: Build and Test (matrix)
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2
      - name: Build (release)
        run: cargo build --release --verbose
      - name: Test (release)
        run: cargo test --release --verbose

  build-artifacts:
    name: Build release artifacts (matrix)
    needs: build-and-test
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2
      - name: Build (release)
        run: cargo build --release --verbose
      - name: Prepare artifact (Windows)
        if: ${{ runner.os == 'Windows' }}
        shell: pwsh
        run: |
          New-Item -Path dist -ItemType Directory -Force | Out-Null
          Copy-Item -Path "target/release/appian-deployment-cli.exe" -Destination "dist/appian-deployment-cli-windows.exe" -Force
      - name: Prepare artifact (macOS)
        if: ${{ runner.os == 'macOS' }}
        shell: bash
        run: |
          mkdir -p dist
          cp target/release/appian-deployment-cli dist/appian-deployment-cli-macos
      - name: Prepare artifact (Linux)
        if: ${{ runner.os == 'Linux' }}
        shell: bash
        run: |
          mkdir -p dist
          cp target/release/appian-deployment-cli dist/appian-deployment-cli-linux
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-binary
          path: dist/*

  release:
    name: Publish GitHub Release
    runs-on: ubuntu-latest
    needs: build-artifacts
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: "*-binary"
          merge-multiple: true
          path: dist
      - name: Publish release assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/appian-deployment-cli-linux
            dist/appian-deployment-cli-macos
            dist/appian-deployment-cli-windows.exe
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
